@page "/personaldetails"
@using Display1.Models
@using Display1.Service
@using Display1.Pages.Components
@*@inject AdventureWorks2019Context DbContext*@
@inject SearchService SearchService
@inject EmployeeService EmployeeService
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager

<PageTitle>Index</PageTitle>

<div class="row">
    <div class="col-12">
        <ul class="list-group">
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Person Type:</strong>
                <span>@(SelectedPerson?.PersonType)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Name Style:</strong>
                <span>@(SelectedPerson?.NameStyle)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Title:</strong>
                <span>@(SelectedPerson?.Title)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>First Name:</strong>
                <input type="text" @bind="@SelectedPerson.FirstName" class="form-control" />
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Middle Name:</strong>
                <span>@(SelectedPerson?.MiddleName)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Last Name:</strong>
                <input type="text" @bind="@SelectedPerson.LastName" class="form-control" />
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Suffix:</strong>
                <span>@(SelectedPerson?.Suffix)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Email Promotion:</strong>
                <span>@(SelectedPerson?.EmailPromotion)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Additional Contact Info:</strong>
                <span>@(SelectedPerson?.AdditionalContactInfo)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Demographics:</strong>
                @if (!string.IsNullOrEmpty(SelectedPerson?.Demographics))
                {
                    <span>
                        <a href="javascript:void(0)" @onclick="OpenDemographicsXml" class="xml-link">Demographics</a>
                    </span>
                }
                else
                {
                    <span>No XML available</span>
                }

            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>rowguid:</strong>
                <span>@(SelectedPerson?.Rowguid)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Modified Date:</strong>
                <span>@(SelectedPerson?.ModifiedDate)</span>
            </li>
            <li>
                <div>
                    <button class="btn btn-primary" @onclick="SaveChanges">Save Details</button>

                </div>
            </li>
        </ul>
    </div>
</div>

@code {
    [Parameter]
    public Person SelectedPerson { get; set; }

    protected override void OnInitialized()
    {
        if (SelectedPerson == null)
        {
            NavigationManager.NavigateTo("/humanresource");
        }
    }

    private void OpenDemographicsXml()
    {
        if (SelectedPerson != null)
        {
            string url = $"/demographicsxmlviewer?XmlContent={Uri.EscapeDataString(SelectedPerson.Demographics)}";
            NavigationManager.NavigateTo(url);
        }
    }

    private async Task SaveChanges()
    {
        await EmployeeService.UpdatePersonDetailsAsync(SelectedPerson);
        NavigationManager.NavigateTo("/humanresource");
    }
}

