


@code {



        /*@page "/admin"
    @using Blazor4.Data
    @using Blazor4.Data.CustomProvider
    @using Microsoft.AspNetCore.Authorization
    @using Microsoft.AspNetCore.Components


     *
     * @using Microsoft.AspNetCore.Identity
    @using System.Security.Claims
    @inject UserManager<ApplicationUser> userManager
    @inject IHttpContextAccessor httpContext
    @inject IRoleStore<ApplicationRole> roleStore
    @inject NavigationManager navigationManager

     <h3>Admin</h3>

    <p>Welcome</p>
    *
    private IList<string> userRoles;

    [Inject]
    public CustomRoleManager CustomRoleManager { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Authorize(Roles = "Admin")]
    protected override async Task OnInitializedAsync()
        {
        var user = httpContext.HttpContext?.User;

        if (user != null && user.Identity?.IsAuthenticated == true)
            {
            var userId = userManager.GetUserId(user);
            var applicationUser = await userManager.FindByIdAsync(userId);

            if (applicationUser != null)
                {
                var isAdmin = CustomRoleManager.AdminEmails.Contains(applicationUser.Email);

                    if (!isAdmin)
                    {

                    NavigationManager.NavigateTo("/accessdenied");
        }
            }
            }
            else
            {

            NavigationManager.NavigateTo("/login");
    }
    }
    */
}
