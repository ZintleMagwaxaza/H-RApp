[1:59 PM] Zintle Magwaxaza

@using Display1.Models

@using Display1.Service

@inject EmployeeService EmployeeService

@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager



<div class="row">

    <div class="col-12">

        <ul class="list-group">

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Person Type:</strong>

                <span>@(SelectedEmployee?.BusinessEntity?.PersonType)</span>

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Name Style:</strong>

                <span>@(SelectedEmployee?.BusinessEntity?.NameStyle)</span>

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Title:</strong>

                <span>@(SelectedEmployee?.BusinessEntity?.Title)</span>

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>First Name:</strong>

                @if (IsEditing)

                {

                    <input type="text" class="form-control" @bind="@SelectedEmployee.BusinessEntity.FirstName" />

                }

                else

                {

                    <span>@(SelectedEmployee?.BusinessEntity?.FirstName)</span>

                }

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Middle Name:</strong>

                @if (IsEditing)

                {

                    <input type="text" class="form-control" @bind="@SelectedEmployee.BusinessEntity.MiddleName" />

                }

                else

                {

                    <span>@(SelectedEmployee?.BusinessEntity?.MiddleName)</span>

                }

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Last Name:</strong>

                @if (IsEditing)

                {

                    <input type="text" class="form-control" @bind="@SelectedEmployee.BusinessEntity.LastName" />

                }

                else

                {

                    <span>@(SelectedEmployee?.BusinessEntity?.LastName)</span>

                }

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Suffix:</strong>

                <span>@(SelectedEmployee?.BusinessEntity?.Suffix)</span>

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Email Promotion:</strong>

                <span>@(SelectedEmployee?.BusinessEntity?.EmailPromotion)</span>

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Additional Contact Info:</strong>

                @if (IsEditing)

                {

                    <input type="text" class="form-control" @bind="@SelectedEmployee.BusinessEntity.AdditionalContactInfo" />

                }

                else

                {

                    <span>@(SelectedEmployee?.BusinessEntity?.AdditionalContactInfo)</span>

                }

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Demographics:</strong>

                @if (!string.IsNullOrEmpty(SelectedEmployee?.BusinessEntity?.Demographics))

                {

                    <span>

                        <a href="javascript:void(0)" @onclick="OpenDemographicsXml" class="xml-link">Demographics</a>

                    </span>

                }

                else

                {

                    <span>No XML available</span>

                }

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>rowguid:</strong>

                <span>@(SelectedEmployee?.BusinessEntity?.Rowguid)</span>

            </li>

            <li class="list-group-item" style="list-style-type: none;">

                <strong>Modified Date:</strong>

                <span>@(SelectedEmployee?.BusinessEntity?.ModifiedDate)</span>

            </li>

        </ul>

        <div class="mt-3">

            @if (IsEditing)

            {

                <button class="btn btn-primary" @onclick="SaveChanges">Save Changes</button>

                <button class="btn btn-secondary ml-2" @onclick="CancelEdit">Cancel</button>

            }

            else

            {

                <button class="btn btn-primary" @onclick="StartEdit">Edit</button>

            }

        </div>

    </div>

</div>



@code {

    [Parameter]

    public Employee SelectedEmployee { get; set; }



    private bool IsEditing = false;

    private Employee originalEmployee;



    protected override void OnInitialized()

    {

        SelectedEmployee = EmployeeService.GetEmployeeByBusinessEntityId(1);

        originalEmployee = SelectedEmployee.Clone();

    }



    private void StartEdit()

    {

        IsEditing = true;

    }



    private async void SaveChanges()
    {
        // Update the changes in the database
        await EmployeeService.UpdatePersonDetailsAsync(SelectedEmployee.BusinessEntity);



        IsEditing = false;
        originalEmployee = SelectedEmployee.Clone();
    }



    private void CancelEdit()

    {

        SelectedEmployee = originalEmployee;

        IsEditing = false;

    }



    private void OpenDemographicsXml()

    {

        string xmlContent = SelectedEmployee?.BusinessEntity?.Demographics;

        NavigationManager.NavigateTo($"/demographicsxmlviewer?XmlContent={Uri.EscapeDataString(xmlContent)}");

    }

}
