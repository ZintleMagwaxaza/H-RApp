<!-- PersonalDetailsTab.razor -->
@using Display1.Models
@using Display1.Service
@inject EmployeeService EmployeeService
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager

<div class="row">
    <div class="col-12">
        <ul class="list-group">
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Person Type:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.PersonType)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Name Style:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.NameStyle)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Title:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.Title)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>First Name:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.FirstName)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Middle Name:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.MiddleName)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Last Name:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.LastName)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Suffix:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.Suffix)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Email Promotion:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.EmailPromotion)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Additional Contact Info:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.AdditionalContactInfo)</span>
            </li>

            <li class="list-group-item" style="list-style-type: none;">
                <strong>Demographics:</strong>
                @if (!string.IsNullOrEmpty(SelectedEmployee?.BusinessEntity?.Demographics))
                {
                    <span>
                        <a href="javascript:void(0)" @onclick="OpenDemographicsXml" class="xml-link">Demographics</a>
                    </span>
                }
                else
                {
                    <span>No XML available</span>
                }
            </li>


            <li class="list-group-item" style="list-style-type: none;">
                <strong>rowguid:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.Rowguid)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Modified Date:</strong>
                <span>@(SelectedEmployee?.BusinessEntity?.ModifiedDate)</span>
            </li>
        </ul>
    </div>
</div>

@code {
    [Parameter]
    public Employee SelectedEmployee { get; set; }

    protected override void OnInitialized()
    {
        
        SelectedEmployee = EmployeeService.GetEmployeeByBusinessEntityId(1);
    }
    private void OpenDemographicsXml()
    {
        string xmlContent = SelectedEmployee?.BusinessEntity?.Demographics;

        
        NavigationManager.NavigateTo($"/demographicsxmlviewer?XmlContent={Uri.EscapeDataString(xmlContent)}");
    }
}