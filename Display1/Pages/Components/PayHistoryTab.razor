<!-- EmployeePayHistoryTab.razor -->
@using Display1.Models
@using Display1.Service
@using Display1.Data.CustomProvider
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager


<div class="row">
    <div class="col-12">
        <ul class="list-group">
            <li class="list-group-item" style="list-style-type: none;">
                <strong>BusinessEntityID:</strong>
                <span>@(SelectedEmployeePayHistory?.BusinessEntityId)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>RateChangeDate:</strong>
                <span>@(SelectedEmployeePayHistory?.RateChangeDate)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Rate:</strong>
                <span>@(SelectedEmployeePayHistory?.Rate)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Pay Frequency:</strong>
                <span>@(SelectedEmployeePayHistory?.PayFrequency)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Modified Date:</strong>
                <span>@(SelectedEmployeePayHistory?.ModifiedDate)</span>
            </li>
        </ul>
    </div>
</div>

@code {
    private EmployeePayHistory SelectedEmployeePayHistory;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        string email = user.FindFirstValue(ClaimTypes.Email);

        int businessEntityId = await EmployeeService.FindBusinessEntityIdByEmailAsync(email);

        if (businessEntityId != 0)
        {
           
            SelectedEmployeePayHistory = await EmployeeService.GetEmployeePayHistoryByBusinessEntityId(businessEntityId);
        }
    }

}
