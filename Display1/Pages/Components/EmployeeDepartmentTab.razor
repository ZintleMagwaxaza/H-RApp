<!-- EmployeeDeaprtmentTab.razo -->
@using Display1.Models
@using Display1.Service
@using Display1.Data.CustomProvider
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject EmployeeService EmployeeService
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-12">
        <ul class="list-group">
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Business Entity Id:</strong>
                <span>@(SelectedEmployeeDepartment?.BusinessEntityId)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Department Id:</strong>
                <span>@(SelectedEmployeeDepartment?.DepartmentId)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Department Name:</strong>
                <span>@(SelectedEmployeeDepartment?.Department?.Name)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Department Group:</strong>
                <span>@(SelectedEmployeeDepartment?.Department?.GroupName)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Shift Id:</strong>
                <span>@(SelectedEmployeeDepartment?.ShiftId)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Start Date:</strong>
                <span>@(SelectedEmployeeDepartment?.StartDate)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>End Date:</strong>
                <span>@(SelectedEmployeeDepartment?.EndDate)</span>
            </li>
            <li class="list-group-item" style="list-style-type: none;">
                <strong>Modified Date:</strong>
                <span>@(SelectedEmployeeDepartment?.ModifiedDate)</span>
            </li>
        </ul>
    </div>
</div>

@code {
    [Parameter]
    public int BusinessEntityId { get; set; }

    private EmployeeDepartmentHistory SelectedEmployeeDepartment;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;

        string email = user.FindFirstValue(ClaimTypes.Email);

        int businessEntityId = await EmployeeService.FindBusinessEntityIdByEmailAsync(email);

        if (businessEntityId != 0)
        {
            SelectedEmployeeDepartment = await EmployeeService.FindEmployeeDepartment(businessEntityId);
        }
    }

}